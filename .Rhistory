issue_date,
notional_value,
coupon_rate,
coupon_period,
coupon_method,
calendar,
instrument_type
)
View(instr)
instr
compute_cash_flow.bond <- function(bond, refdate) {
cf_dates <- coupon_generation(refdate, bond$maturity_date, bond$coupon_period, bond$coupon_method)
coupon_payment <- bond$notional_value * (compound(bond$coupon_rate, as.term(bond$coupon_period)) - 1)
cf <- data.frame(
coupon_dates = cf_dates,
payment_dates = following(cf_dates),
coupon_payments = coupon_payment,
amortization = 0
)
cf$business_days <- bizdays(refdate, cf$payment_dates)
cf$amortization[nrow(cf)] <- bond$notional_value
bond$cash_flow <- cf
bond
}
compute_cash_flow.bond(instr[1,], df$data_referencia[1])
compute_cash_flow.bond(instr[1,], df$data_referencia[1]) %>% View()
compute_cash_flow.bond(instr[5,], df$data_referencia[1]) %>% View()
compute_cash_flow.bond(instr[5,], df$data_referencia[1])
instr[5]
instr[5,]
instr[5,]  %>% as.list()
bond <- instr[5,]
bond
cf_dates <- coupon_generation(refdate, bond$maturity_date, bond$coupon_period, bond$coupon_method)
refdate <- df$data_referencia[1]
cf_dates <- coupon_generation(refdate, bond$maturity_date, bond$coupon_period, bond$coupon_method)
cf_dates
coupon_payment <- bond$notional_value * (compound(bond$coupon_rate, as.term(bond$coupon_period)) - 1)
coupon_payment
cf <- data.frame(
coupon_dates = cf_dates,
payment_dates = following(cf_dates),
coupon_payments = coupon_payment,
amortization = 0
)
cf
cf$business_days <- bizdays(refdate, cf$payment_dates)
cf$amortization[nrow(cf)] <- bond$notional_value
cf
bond$cash_flow <- cf
I(cf)
cf %>% str()
I(cf) %>% str()
bond$cash_flow <- I(cf)
bond$cash_flow <- list(cf)
bond
bond$cash_flow
compute_cash_flow.bond <- function(bond, refdate) {
cf_dates <- coupon_generation(refdate, bond$maturity_date, bond$coupon_period, bond$coupon_method)
coupon_payment <- bond$notional_value * (compound(bond$coupon_rate, as.term(bond$coupon_period)) - 1)
cf <- data.frame(
coupon_dates = cf_dates,
payment_dates = following(cf_dates),
coupon_payments = coupon_payment,
amortization = 0
)
cf$business_days <- bizdays(refdate, cf$payment_dates)
cf$amortization[nrow(cf)] <- bond$notional_value
cf
}
compute_cash_flow.bond(instr[2,], df$data_referencia[1])
purrr::pmap(instr, as.list)
purrr::pmap(instr, list)
purrr::pmap(instr, identity)
purrr::pmap(instr, compute_cash_flow.bond, refdate = df$data_referencia[1])
apply(df, 1, identity)
as.list(instr)
purrr::pmap(as.list(instr), list)
seq_along(instr)
instr
seq_len(dim(instr)[1])
by(instr, seq_len(dim(instr)[1]), identity)
by(instr, seq_len(dim(instr)[1]), identity) %>% str()
by(instr, seq_len(dim(instr)[1]), compute_cash_flow.bond, refdate = df$data_referencia[1])
x <- by(instr, seq_len(dim(instr)[1]), compute_cash_flow.bond, refdate = df$data_referencia[1])
class(c)
class(x)
str(x)
methods(class = "by")
instr$cash_flow <- by(instr, seq_len(dim(instr)[1]), compute_cash_flow.bond, refdate = df$data_referencia[1])
instr
instr$cash_flow
View(instr)
cf <- by(instr, seq_len(dim(instr)[1]), compute_cash_flow.bond, refdate = df$data_referencia[1])
attributes(cf) <- NULL
instr$cash_flow <- cf
instr
instr$cash_flow
View(instr)
instr$cash_flow[1]
instr$cash_flow[[1]]
timeDate::holidayNYSE(2017)
load_rmetrics_calendars(2017)
calendars()[['Rmetrics/NYSE']]
devtools::load_all(".")
x <- 1:10
x
x [5]
x[5] <- NULL
length(NULL)
rm(x)
library(httr)
library(dplyr)
library(bizdays)
library(purrr)
library(stringr)
bizdays.options$set(default.calendar = "Brazil/ANBIMA")
url <- modify_url("https://api.morph.io/wilsonfreitas/MorthIO_TitulosPublicos_ANBIMA/data.json",
query = list(key = "uIUD3TeyxgIVWhVwsFr0",
query = "select * from 'data' where data_referencia in (select max(data_referencia) from 'data') and titulo = 'NTN-F'"))
res <- GET(url)
df <- jsonlite::fromJSON(content(res, as = "text"))
df <- map_if(df, function(x) any(str_detect(x, "^\\d{8}$")), function(.x) as.Date(.x, format="%Y%m%d")) %>%
as_tibble()
df
instr <- df %>% mutate(
maturity_date = data_vencimento,
yield_rate = spotrate(taxa_ind/100, "discrete", "business/252", "Brazil/ANBIMA"),
issue_date = data_base,
notional_value = 1000,
coupon_rate = spotrate(0.1, "discrete", "business/252", "Brazil/ANBIMA"),
coupon_period = "6 months",
coupon_method = "backward",
calendar = "Brazil/ANBIMA",
instrument_type = "fixedratebond"
) %>% select(
maturity_date,
yield_rate,
issue_date,
notional_value,
coupon_rate,
coupon_period,
coupon_method,
calendar,
instrument_type
)
instr
plyr::dlply(instr, 1, c)
plyr::dlply(instr, 1, c) -> l_instr
instr <- df %>% mutate(
maturity_date = data_vencimento,
yield_rate = spotrate(taxa_ind/100, "discrete", "business/252", "Brazil/ANBIMA"),
issue_date = data_base,
notional_value = 1000,
coupon_rate = spotrate(0.1, "discrete", "business/252", "Brazil/ANBIMA"),
coupon_period = "6 months",
coupon_method = "backward",
calendar = "Brazil/ANBIMA",
instrument_type = "fixedratebond"
) %>% select(
maturity_date,
yield_rate,
issue_date,
notional_value,
coupon_rate,
coupon_period,
coupon_method,
calendar,
instrument_type
) %>% plyr::dlply(1, c)
rm(l_instr)
is
is(1)
is(1, "numeric")
is(1)
?is
extends("numeric", "vector")
x <- extends("numeric", "vector")
x
x <- extends("numeric")
x
x <- extends("vector")
devtools::load_all(".")
period(1)
?period
seconds()
lubridate::period(1)
p = lubridate::period(1)
class(p)
term(10)
term
term("days")
term("1 days")
term("1 day")
term(1, "day")
term(1, "days")
term(2, "day")
term(2, "days")
term(2, "year")
months
months(1)
class(months(1))
base::months(1)
class(base::months(1))
months
lubridate:::months.numeric
months(Sys.Date())
devtools::load_all(".")
as.spotrate("0.1 discrete business/252 Brazil/ANBIMA")
rate <- as.spotrate("0.1 discrete business/252 Brazil/ANBIMA")
compound(rate, "10 days")
compound(rate, 10, "days")
compound(rate, term("10 days"))
compound(rate, term(10, "days"))
compound(rate, as.term("10 days"))
comp_class <- setClass(
"compounding",
contains = "character"
)
comp_class()
comp_class("discrete")
x <- comp_class("discrete")
x@.Data
devtools::load_all(".")
devtools::load_all(".")
compounding("simple")
as.character(compounding("simple"))
as(compounding("simple"), "character")
devtools::load_all(".")
compounding("simple")
devtools::load_all(".")
compounding("simple")
devtools::load_all(".")
devtools::load_all(".")
compounding("simple")
devtools::load_all(".")
compounding("simple")
compounding("discrete")
daycount("365")
term
devtools::test(filter="daycount")
devtools::load_all(".")
daycount("365")
devtools::load_all(".")
devtools::load_all(".")
daycount("365")
devtools::load_all(".")
daycount("365")
devtools::load_all(".")
daycount("365")
devtools::test(filter="daycount")
daycount("actual/365")
strsplit("actual/365", "/")
stringr::str_split("actual/365", "/")
devtools::load_all(".")
daycount("actual/365")
devtools::test(filter="daycount")
devtools::load_all(".")
daycount("actual/365")
term(10, "months")
period(1)
period
period
lubridate::period
lubridate::period(1)
lubridate::period(1, "days")
lubridate::period(1, "day")
lubridate::period(1, "year")
lubridate::period(1, "month")
term(10, "years")
units(term(10, "years"))
methods(class = "Period")
library(lubridate)
methods(class = "Period")
new("Period", 10)
new("Period", year = 10)
new("Period", year = 1:10)
new("Period", 1:10, year = 1:10)
new("Period", 1:10, year = 1:5)
new("Period", 1:10, year = 1:3)
new("Period", 1:3, year = 1:10)
rep_len(1:3, 10)
devtools::load_all(".")
debug(term)
term(10, "months")
term(10, "months")
.Object
class(.Object)
term(10, "months")
term(10, "months")
class(.Object)
term(10, c("months", "days"))
term(10:11, c("months", "days"))
c("months", "days")
sub("^(.*)s$", "\\1", c("months", "days")
)
sub("^(.*)s$", "\\1", c("months", "days"))
sub("s$", "", c("months", "days"))
max(1, 2)
?nzchar
undebug(term)
term(10, "years")
devtools::load_all(".")
term(10, "years")
debug(term)
term(10, "years")
term(10, "years")
term(10, "years")
term(10, "years")
term(10, "years")
devtools::load_all(".")
term(10, "years")
devtools::load_all(".")
term(10, "years")
devtools::load_all(".")
term(10, "years")
new("term", 10, "years")
t <- new("term", 10, "years")
t
t[1]
t[1] <- 10
t
t[1] <- 20
t
t2 <- new("term", 20, "years")
t1 <- new("term", 10, "years")
t1 == t2
t1 > t2
t1 < t2
t1 + t2
devtools::load_all(".")
t1
t1@.Data
devtools::load_all(".")
t1
t1@.Data
devtools::load_all(".")
devtools::load_all(".")
term(1:10, c("day", "year", "month"))
term(1:2, c("day", "year", "month"))
switch(1:10, 1 = "a", 2 = "b", "c")
?switch
switch(c("a", "b", "d"), a = 1, b = 2, 3)
sapply(c("year", "month"), function(x) switch(x, year = "Y", month = "M"))
sapply(c("year", "month", "month"), function(x) switch(x, year = "Y", month = "M"))
devtools::load_all(".")
devtools::load_all(".")
term(1:10, c("day", "year", "month"))
devtools::load_all(".")
term(1:10, c("day", "year", "month"))
devtools::load_all(".")
term(1:10, c("day", "year", "month"))
term(1:10, c("day", "year", "month"))[1]
units
?units
lubridate::as.period("10y")
lubridate::as.period("10 years")
lubridate::as.period("10Y")
devtools::load_all(".")
devtools::load_all(".")
library(httr)
library(dplyr)
library(bizdays)
library(purrr)
library(stringr)
bizdays.options$set(default.calendar = "Brazil/ANBIMA")
url <- modify_url("https://api.morph.io/wilsonfreitas/MorthIO_TitulosPublicos_ANBIMA/data.json",
query = list(key = "uIUD3TeyxgIVWhVwsFr0",
query = "select * from 'data' where data_referencia in (select max(data_referencia) from 'data') and titulo = 'NTN-F'"))
res <- GET(url)
df <- jsonlite::fromJSON(content(res, as = "text"))
df
df <- jsonlite::fromJSON(content(res, as = "text"))
df <- map_if(df, function(x) any(str_detect(x, "^\\d{8}$")), function(.x) as.Date(.x, format="%Y%m%d")) %>%
as_tibble()
df
instr <- df %>% mutate(
maturity_date = data_vencimento,
yield_rate = spotrate(taxa_ind/100, "discrete", "business/252", "Brazil/ANBIMA"),
issue_date = data_base,
notional_value = 1000,
coupon_rate = spotrate(0.1, "discrete", "business/252", "Brazil/ANBIMA"),
coupon_period = "6 months",
coupon_method = "backward",
calendar = "Brazil/ANBIMA",
instrument_type = "fixedratebond"
) %>% select(
maturity_date,
yield_rate,
issue_date,
notional_value,
coupon_rate,
coupon_period,
coupon_method,
calendar,
instrument_type
) %>% plyr::dlply(1, c)
coupon_generation <- function(start_date, end_date, coupon_period, coupon_method) {
if (coupon_method == "backward") {
.term <- paste0("-", format(coupon_period))
x <- seq(end_date, start_date, by = .term)
sort(x)
} else if (coupon_method == "forward") {
seq(start_date, end_date, by = format(coupon_period))
} else
stop("Invalid coupon method: ", coupon_method)
}
compute_cash_flow <- function(bond, refdate) UseMethod("compute_cash_flow", bond)
compute_cash_flow.bond <- function(bond, refdate) {
cf_dates <- coupon_generation(refdate, bond$maturity_date, bond$coupon_period, bond$coupon_method)
coupon_payment <- bond$notional_value * (compound(bond$coupon_rate, as.term(bond$coupon_period)) - 1)
cf <- data.frame(
coupon_dates = cf_dates,
payment_dates = following(cf_dates),
coupon_payments = coupon_payment,
amortization = 0
)
cf$business_days <- bizdays(refdate, cf$payment_dates)
cf$amortization[nrow(cf)] <- bond$notional_value
cf
}
cf <- by(instr, seq_len(dim(instr)[1]), compute_cash_flow.bond, refdate = df$data_referencia[1])
# ----
bond <- instr[5,]
spotrate(0.06, 'simple', 'actual/365')
devtools::load_all(".")
spotrate(0.06, 'simple', 'actual/365')
cdi <- spotrate(0.064, 'discrete', 'business/252', "Brazil/ANBIMA")
cdi
compound(cdi, 1, "year")
compound(cdi, "2019-07-21", "2019-07-31")
compound(cdi, as.Date("2019-07-21"), as.Date("2019-07-31"))
compound(cdi, term(1, "year"))
spr <- spotrate(0.06, 'simple', 'actual/365')
compound(spr, 10, "day")
term(1, "days")
devtools::load_all(".")
term(1, "days")
term(1, "days")
term(1, "days")
debugonce(term)
term(1, "days")
devtools::load_all(".")
term(1, "days")
methods(class = "term")
objects()
is.NA
is.na
is.nan
is.NaN
NaN
tx <- term(1, "days")
tx
tx@units
tx@day
tx@year
tx@.Data
object.size(tx)
object.size(1)
cdi
compound(cdi, 1, "year")
compound(cdi, 6, "year")
compound(cdi, 7, "year")
compound(cdi, 10, "year")
compound(cdi, 12, "year")
compound(cdi, 11, "year")
daycount("actual/365")
daycount("actual/365")
devtools::load_all(".")
tx <- term(1, "days")
devtools::load_all(".")
devtools::load_all(".")
tx <- term(1, "days")
devtools::load_all(".")
tx <- term(1, "days")
devtools::load_all(".")
tx <- term(1, "days")
tx
class(tx)
devtools::load_all(".")
devtools::load_all(".")
tx
tx == "1 day"
as.character(tx)
tx == "1 days"
tx == "1D"
tx == "1 day"
as.character(tx)
devtools::load_all(".")
as.character(tx)
tx == "1 day"
devtools::load_all(".")
tx == "1 day"
"1 day" == tx
devtools::load_all(".")
"1 day" == tx
devtools::load_all(".")
"1 day" == tx
tx == tx
devtools::load_all(".")
tx <- term(1, "days")
devtools::load_all(".")
tx <- term(1, "days")
tx
tx <- term(c(1, 2), "days")
tx
tx <- term(c(1, 2), c("days", "years"))
tx
t2 <- term(c(1, 2), c("days", "years"))
tx == t2
devtools::load_all(".")
tx == t2
